-- ================================
-- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã applications
-- ================================

-- 1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã applications (–∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–¥–µ –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ë–î)
CREATE TABLE IF NOT EXISTS applications (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  numbers INTEGER[] NOT NULL,
  user_name VARCHAR(255) NOT NULL,
  user_phone VARCHAR(20) NOT NULL,
  cedula VARCHAR(50) NOT NULL,
  payment_method VARCHAR(100) NOT NULL,
  payment_proof_url TEXT,
  status VARCHAR(50) DEFAULT 'pending' CHECK (status IN ('pending', 'approved', 'rejected')),
  admin_notes TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2. –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
CREATE INDEX IF NOT EXISTS idx_applications_status ON applications(status);
CREATE INDEX IF NOT EXISTS idx_applications_numbers ON applications USING GIN(numbers);
CREATE INDEX IF NOT EXISTS idx_applications_created_at ON applications(created_at);
CREATE INDEX IF NOT EXISTS idx_applications_user_phone ON applications(user_phone);

-- 3. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION update_applications_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- 4. –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã applications
DROP TRIGGER IF EXISTS update_applications_updated_at ON applications;
CREATE TRIGGER update_applications_updated_at 
    BEFORE UPDATE ON applications 
    FOR EACH ROW EXECUTE FUNCTION update_applications_updated_at();

-- 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Row Level Security (RLS)
ALTER TABLE applications ENABLE ROW LEVEL SECURITY;

-- –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
DROP POLICY IF EXISTS "Anyone can create applications" ON applications;
DROP POLICY IF EXISTS "Anyone can view applications" ON applications;
DROP POLICY IF EXISTS "Only admins can update applications" ON applications;

-- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏
CREATE POLICY "Anyone can create applications" ON applications
  FOR INSERT WITH CHECK (true);

CREATE POLICY "Anyone can view applications" ON applications
  FOR SELECT USING (true);

CREATE POLICY "Only admins can update applications" ON applications
  FOR UPDATE USING (auth.role() = 'service_role');

-- 6. –í–∫–ª—é—á–∞–µ–º —Ä–µ–∞–ª-—Ç–∞–π–º –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
ALTER PUBLICATION supabase_realtime ADD TABLE applications;

-- 7. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
CREATE OR REPLACE FUNCTION get_applications_by_status(status_filter TEXT)
RETURNS TABLE(
  id UUID,
  numbers INTEGER[],
  user_name VARCHAR(255),
  user_phone VARCHAR(20),
  cedula VARCHAR(50),
  payment_method VARCHAR(100),
  payment_proof_url TEXT,
  status VARCHAR(50),
  admin_notes TEXT,
  created_at TIMESTAMP WITH TIME ZONE
) AS $$
BEGIN
  RETURN QUERY
  SELECT 
    a.id,
    a.numbers,
    a.user_name,
    a.user_phone,
    a.cedula,
    a.payment_method,
    a.payment_proof_url,
    a.status,
    a.admin_notes,
    a.created_at
  FROM applications a
  WHERE a.status = status_filter
  ORDER BY a.created_at DESC;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- 8. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ –∏–∑ –∑–∞—è–≤–æ–∫
CREATE OR REPLACE FUNCTION get_blocked_numbers_from_applications()
RETURNS INTEGER[] AS $$
DECLARE
  blocked_numbers INTEGER[];
BEGIN
  SELECT ARRAY_AGG(DISTINCT number_elem)
  INTO blocked_numbers
  FROM applications a,
       UNNEST(a.numbers) AS number_elem
  WHERE a.status = 'approved';
  
  RETURN COALESCE(blocked_numbers, ARRAY[]::INTEGER[]);
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- 9. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏ (–¥–ª—è –∞–¥–º–∏–Ω–∞)
CREATE OR REPLACE FUNCTION update_application_status(
  application_id_input UUID,
  new_status TEXT,
  admin_notes_input TEXT DEFAULT NULL
)
RETURNS BOOLEAN AS $$
BEGIN
  UPDATE applications 
  SET 
    status = new_status,
    admin_notes = COALESCE(admin_notes_input, admin_notes),
    updated_at = NOW()
  WHERE id = application_id_input;
  
  RETURN FOUND;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- ================================
-- –ú–ò–ì–†–ê–¶–ò–Ø –î–ê–ù–ù–´–• (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
-- ================================

-- 10. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ number_reservations –≤ applications (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
CREATE OR REPLACE FUNCTION migrate_reservations_to_applications()
RETURNS BOOLEAN AS $$
DECLARE
  reservation RECORD;
BEGIN
  FOR reservation IN 
    SELECT * FROM number_reservations 
    WHERE status = 'confirmed'
  LOOP
    INSERT INTO applications (
      numbers,
      user_name,
      user_phone,
      cedula,
      payment_method,
      status,
      created_at
    ) VALUES (
      ARRAY[reservation.number],
      reservation.user_name,
      reservation.user_phone,
      'MIGRATED', -- Placeholder –¥–ª—è cedula
      reservation.payment_method,
      'approved',
      reservation.created_at
    );
  END LOOP;
  
  RETURN TRUE;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- ================================
-- –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø
-- ================================

/*
-- –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É:
INSERT INTO applications (numbers, user_name, user_phone, cedula, payment_method)
VALUES (ARRAY[1, 5, 10], 'Juan P√©rez', '+584141234567', 'V-12345678', 'pago-movil');

-- –ü–æ–ª—É—á–∏—Ç—å –∑–∞—è–≤–∫–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É:
SELECT * FROM get_applications_by_status('pending');

-- –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:
SELECT update_application_status(
  'uuid-–∑–∞—è–≤–∫–∏',
  'approved',
  'Documento verificado correctamente'
);

-- –ü–æ–ª—É—á–∏—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞:
SELECT get_blocked_numbers_from_applications();

-- –ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö (–≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–¥–∏–Ω —Ä–∞–∑ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ):
-- SELECT migrate_reservations_to_applications();
*/

-- ================================
-- –ü–†–û–í–ï–†–ö–ê –°–û–ó–î–ê–ù–ò–Ø
-- ================================

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ
DO $$
BEGIN
  IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'applications') THEN
    RAISE NOTICE '‚úÖ –¢–∞–±–ª–∏—Ü–∞ applications —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞';
  ELSE
    RAISE EXCEPTION '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã applications';
  END IF;
END $$;

SELECT 'üéâ –¢–∞–±–ª–∏—Ü–∞ applications –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!' as message; 