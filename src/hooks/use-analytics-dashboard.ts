/**
 * use-analytics-dashboard.ts - React —Ö—É–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 */

import { useQuery, useQueryClient } from '@tanstack/react-query'
import { useCallback, useEffect, useRef } from 'react'
import { AnalyticsService, type RealtimeAnalytics, type ActiveUser, type ActiveReservation, type ConversionStats, type HourlyActivity } from '@/lib/analyticsService'
import { toast } from '@/hooks/use-toast'

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
const REFETCH_INTERVAL = 30000 // 30 —Å–µ–∫—É–Ω–¥
const STALE_TIME = 25000 // 25 —Å–µ–∫—É–Ω–¥
const ERROR_RETRY_DELAY = 10000 // 10 —Å–µ–∫—É–Ω–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è real-time –º–µ—Ç—Ä–∏–∫ –¥–∞—à–±–æ—Ä–¥–∞
 */
export function useRealtimeAnalytics() {
  const errorCountRef = useRef(0)
  const maxRetries = 3

  return useQuery({
    queryKey: ['analytics', 'realtime'],
    queryFn: async () => {
      try {
        console.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ real-time –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...')
        const data = await AnalyticsService.getRealtimeAnalytics()
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ
        errorCountRef.current = 0
        
        if (!data) {
          throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏')
        }
        
        console.log('‚úÖ Real-time –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', data)
        return data
      } catch (error) {
        errorCountRef.current++
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ real-time –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', error)
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö
        if (errorCountRef.current >= 2) {
          toast({
            title: "Error de conexi√≥n",
            description: "No se pudo cargar la anal√≠tica en tiempo real",
            variant: "destructive"
          })
        }
        
        throw error
      }
    },
    refetchInterval: REFETCH_INTERVAL,
    staleTime: STALE_TIME,
    retry: (failureCount, error) => {
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
      if (failureCount >= maxRetries) {
        console.warn('‚ö†Ô∏è –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –¥–ª—è real-time –∞–Ω–∞–ª–∏—Ç–∏–∫–∏')
        return false
      }
      return true
    },
    retryDelay: ERROR_RETRY_DELAY,
    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º refetch –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö, –Ω–æ —Å –±–æ–ª—å—à–∏–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
    refetchOnWindowFocus: true,
    refetchOnReconnect: true
  })
}

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
export function useActiveUsers() {
  return useQuery({
    queryKey: ['analytics', 'active-users'],
    queryFn: async () => {
      console.log('üë• –ó–∞–≥—Ä—É–∑–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
      const data = await AnalyticsService.getActiveUsers()
      console.log('‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', data.length)
      return data
    },
    refetchInterval: REFETCH_INTERVAL,
    staleTime: STALE_TIME,
    retry: 2,
    retryDelay: ERROR_RETRY_DELAY
  })
}

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π —Å countdown
 */
export function useActiveReservations() {
  return useQuery({
    queryKey: ['analytics', 'active-reservations'],
    queryFn: async () => {
      console.log('‚è∞ –ó–∞–≥—Ä—É–∑–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...')
      const data = await AnalyticsService.getActiveReservations()
      console.log('‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', data.length)
      return data
    },
    refetchInterval: REFETCH_INTERVAL, // –ë–æ–ª–µ–µ —á–∞—Å—Ç–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è countdown
    staleTime: STALE_TIME,
    retry: 2,
    retryDelay: ERROR_RETRY_DELAY
  })
}

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
 */
export function useConversionStats() {
  return useQuery({
    queryKey: ['analytics', 'conversion-stats'],
    queryFn: async () => {
      console.log('üìà –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏...')
      const data = await AnalyticsService.getConversionStats()
      console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', data.length, '–∑–∞–ø–∏—Å–µ–π')
      return data
    },
    refetchInterval: REFETCH_INTERVAL * 2, // –ú–µ–Ω–µ–µ —á–∞—Å—Ç–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    staleTime: STALE_TIME * 2,
    retry: 2,
    retryDelay: ERROR_RETRY_DELAY
  })
}

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—á–∞—Å–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
 */
export function useHourlyActivity() {
  return useQuery({
    queryKey: ['analytics', 'hourly-activity'],
    queryFn: async () => {
      console.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—á–∞—Å–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...')
      const data = await AnalyticsService.getHourlyActivity()
      console.log('‚úÖ –ü–æ—á–∞—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', data.length, '–∑–∞–ø–∏—Å–µ–π')
      return data
    },
    refetchInterval: REFETCH_INTERVAL * 2,
    staleTime: STALE_TIME * 2,
    retry: 2,
    retryDelay: ERROR_RETRY_DELAY
  })
}

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
 */
export function useActivityLogs(filters?: {
  action_type?: string
  page_visited?: string
  session_id?: string
  date_from?: string
  date_to?: string
  limit?: number
}) {
  return useQuery({
    queryKey: ['analytics', 'activity-logs', filters],
    queryFn: async () => {
      console.log('üìù –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–≥–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏:', filters)
      const data = await AnalyticsService.getActivityLogs(filters)
      console.log('‚úÖ –õ–æ–≥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', data.length, '–∑–∞–ø–∏—Å–µ–π')
      return data
    },
    refetchInterval: REFETCH_INTERVAL,
    staleTime: STALE_TIME,
    retry: 2,
    retryDelay: ERROR_RETRY_DELAY,
    enabled: true // –í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω, –Ω–æ –º–æ–∂–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä
  })
}

/**
 * –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ö—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º –¥–∞—à–±–æ—Ä–¥–æ–º –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
 */
export function useAnalyticsDashboard() {
  const queryClient = useQueryClient()
  
  // –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
  const realtimeQuery = useRealtimeAnalytics()
  const activeUsersQuery = useActiveUsers()
  const activeReservationsQuery = useActiveReservations()
  const conversionStatsQuery = useConversionStats()
  const hourlyActivityQuery = useHourlyActivity()

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
  const refreshAll = useCallback(async () => {
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...')
    
    try {
      await Promise.all([
        queryClient.invalidateQueries({ queryKey: ['analytics'] }),
        queryClient.refetchQueries({ queryKey: ['analytics'] })
      ])
      
      toast({
        title: "Datos actualizados",
        description: "La anal√≠tica se ha actualizado correctamente",
      })
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', error)
      toast({
        title: "Error de actualizaci√≥n",
        description: "No se pudo actualizar la anal√≠tica",
        variant: "destructive"
      })
    }
  }, [queryClient])

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
  const clearCache = useCallback(() => {
    console.log('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...')
    queryClient.removeQueries({ queryKey: ['analytics'] })
    toast({
      title: "Cach√© limpiado",
      description: "Los datos de anal√≠tica se recargar√°n",
    })
  }, [queryClient])

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ —Ñ–æ–∫—É—Å–∞ –Ω–∞ –≤–∫–ª–∞–¥–∫—É
  useEffect(() => {
    const handleVisibilityChange = () => {
      if (!document.hidden) {
        console.log('üëÅÔ∏è –í–∫–ª–∞–¥–∫–∞ –ø–æ–ª—É—á–∏–ª–∞ —Ñ–æ–∫—É—Å, –æ–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É...')
        queryClient.invalidateQueries({ queryKey: ['analytics', 'realtime'] })
      }
    }

    document.addEventListener('visibilitychange', handleVisibilityChange)
    return () => document.removeEventListener('visibilitychange', handleVisibilityChange)
  }, [queryClient])

  // –ü–æ–¥—Å—á–µ—Ç –æ–±—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
  const isLoading = realtimeQuery.isLoading || activeUsersQuery.isLoading || activeReservationsQuery.isLoading
  const isError = realtimeQuery.isError || activeUsersQuery.isError || activeReservationsQuery.isError
  const hasData = realtimeQuery.data || activeUsersQuery.data || activeReservationsQuery.data

  // –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  const dashboardData = {
    realtime: realtimeQuery.data,
    activeUsers: activeUsersQuery.data || [],
    activeReservations: activeReservationsQuery.data || [],
    conversionStats: conversionStatsQuery.data || [],
    hourlyActivity: hourlyActivityQuery.data || []
  }

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
  const stats = {
    usersOnline: realtimeQuery.data?.users_online || 0,
    activeReservations: realtimeQuery.data?.active_reservations || 0,
    expiringReservations: realtimeQuery.data?.expiring_reservations || 0,
    conversionRate: realtimeQuery.data?.todays_conversion_rate || 0,
    hourlyActivity: realtimeQuery.data?.hourly_activity || 0,
    lastUpdated: realtimeQuery.data?.last_updated
  }

  return {
    // –î–∞–Ω–Ω—ã–µ
    data: dashboardData,
    stats,
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    isLoading,
    isError,
    hasData,
    
    // –û—Ç–¥–µ–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
    queries: {
      realtime: realtimeQuery,
      activeUsers: activeUsersQuery,
      activeReservations: activeReservationsQuery,
      conversionStats: conversionStatsQuery,
      hourlyActivity: hourlyActivityQuery
    },
    
    // –ú–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    refreshAll,
    clearCache,
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    lastRefresh: new Date().toLocaleTimeString()
  }
}

/**
 * –•—É–∫ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö
 */
export function useAnalyticsAlerts() {
  const { data: activeReservations } = useActiveReservations()
  const { stats } = useAnalyticsDashboard()
  const alertShownRef = useRef<Set<string>>(new Set())

  useEffect(() => {
    if (!activeReservations || activeReservations.length === 0) return

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –∏—Å—Ç–µ–∫–∞—é—â–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    const criticalReservations = activeReservations.filter(
      reservation => reservation.reservation_status === 'expiring_soon'
    )

    criticalReservations.forEach(reservation => {
      const alertKey = `expiring_${reservation.id}`
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      if (!alertShownRef.current.has(alertKey)) {
        alertShownRef.current.add(alertKey)
        
        toast({
          title: "‚ö†Ô∏è Reserva expirando",
          description: `La reserva de ${reservation.user_name} expira en menos de 5 minutos`,
          variant: "destructive",
          duration: 10000 // 10 —Å–µ–∫—É–Ω–¥
        })
      }
    })

    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
    const activeIds = new Set(activeReservations.map(r => `expiring_${r.id}`))
    alertShownRef.current.forEach(alertKey => {
      if (alertKey.startsWith('expiring_') && !activeIds.has(alertKey)) {
        alertShownRef.current.delete(alertKey)
      }
    })
  }, [activeReservations])

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—ã—Å–æ–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  useEffect(() => {
    if (stats.usersOnline > 50) { // –ü–æ—Ä–æ–≥ –¥–ª—è "–≤—ã—Å–æ–∫–æ–π" –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
      const alertKey = 'high_activity'
      
      if (!alertShownRef.current.has(alertKey)) {
        alertShownRef.current.add(alertKey)
        
        toast({
          title: "üìà Alta actividad detectada",
          description: `${stats.usersOnline} usuarios en l√≠nea`,
          duration: 5000
        })
        
        // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
        setTimeout(() => {
          alertShownRef.current.delete(alertKey)
        }, 300000) // 5 –º–∏–Ω—É—Ç
      }
    }
  }, [stats.usersOnline])

  return {
    alertsCount: alertShownRef.current.size
  }
}