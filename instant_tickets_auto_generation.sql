-- =====================================================
-- –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ì–ï–ù–ï–†–ê–¶–ò–Ø INSTANT TICKETS
-- –ü—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏ —Å–æ–∑–¥–∞–µ—Ç –±–∏–ª–µ—Ç—ã = –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –Ω–æ–º–µ—Ä–æ–≤
-- =====================================================

-- 1. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –±–∏–ª–µ—Ç–∞
CREATE OR REPLACE FUNCTION generate_ticket_number()
RETURNS TEXT AS $$
DECLARE
    ticket_number TEXT;
    counter INTEGER := 0;
BEGIN
    LOOP
        -- –§–æ—Ä–º–∞—Ç: IT-YYYYMMDD-NNNN
        ticket_number := 'IT-' || TO_CHAR(NOW(), 'YYYYMMDD') || '-' || LPAD((EXTRACT(epoch FROM NOW())::BIGINT % 10000)::TEXT, 4, '0');
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
        IF NOT EXISTS (SELECT 1 FROM instant_tickets WHERE ticket_number = ticket_number) THEN
            RETURN ticket_number;
        END IF;
        
        counter := counter + 1;
        IF counter > 1000 THEN
            RAISE EXCEPTION '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –±–∏–ª–µ—Ç–∞';
        END IF;
        
        -- –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
        PERFORM pg_sleep(0.001);
    END LOOP;
END;
$$ LANGUAGE plpgsql;

-- 2. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —à—Ç—Ä–∏—Ö-–∫–æ–¥–∞
CREATE OR REPLACE FUNCTION generate_barcode()
RETURNS TEXT AS $$
DECLARE
    barcode TEXT;
    counter INTEGER := 0;
BEGIN
    LOOP
        -- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 12-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥
        barcode := LPAD(FLOOR(RANDOM() * 1000000000000)::TEXT, 12, '0');
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
        IF NOT EXISTS (SELECT 1 FROM instant_tickets WHERE barcode = barcode) THEN
            RETURN barcode;
        END IF;
        
        counter := counter + 1;
        IF counter > 1000 THEN
            RAISE EXCEPTION '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —à—Ç—Ä–∏—Ö-–∫–æ–¥';
        END IF;
    END LOOP;
END;
$$ LANGUAGE plpgsql;

-- 3. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Ä–∏–∑–∞ –±–∏–ª–µ—Ç–∞
CREATE OR REPLACE FUNCTION calculate_ticket_prize(ticket_count INTEGER)
RETURNS TABLE(prize_type VARCHAR, prize_amount NUMERIC, is_winner BOOLEAN) AS $$
DECLARE
    -- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–∑–æ–≤–æ–≥–æ —Ñ–æ–Ω–¥–∞ (10% –æ—Ç –ø—Ä–∏–±—ã–ª–∏)
    total_budget NUMERIC := 15.00; -- $15 –∏–∑ $150 –ø—Ä–∏–±—ã–ª–∏ –ø—Ä–∏ 100 –±–∏–ª–µ—Ç–∞—Ö
    budget_per_ticket NUMERIC;
    win_probability NUMERIC := 0.20; -- 20% –±–∏–ª–µ—Ç–æ–≤ –≤—ã–∏–≥—Ä—ã–≤–∞—é—Ç
    random_val NUMERIC;
    prize_category NUMERIC;
BEGIN
    budget_per_ticket := total_budget / 100; -- $0.15 –≤ —Å—Ä–µ–¥–Ω–µ–º –Ω–∞ –±–∏–ª–µ—Ç
    random_val := RANDOM();
    
    -- –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –ª–∏ –±–∏–ª–µ—Ç
    IF random_val <= win_probability THEN
        -- –ë–∏–ª–µ—Ç –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç, –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–∏–∑–∞
        prize_category := RANDOM();
        
        IF prize_category <= 0.70 THEN
            -- 70% - –º–µ–ª–∫–∏–µ –ø—Ä–∏–∑—ã ($0.50 - $2.00)
            prize_type := 'small';
            prize_amount := 0.5 + (RANDOM() * 1.5); -- $0.50-$2.00
            is_winner := TRUE;
        ELSIF prize_category <= 0.95 THEN
            -- 25% - —Å—Ä–µ–¥–Ω–∏–µ –ø—Ä–∏–∑—ã ($3.00 - $5.00)
            prize_type := 'medium';
            prize_amount := 3.0 + (RANDOM() * 2.0); -- $3.00-$5.00
            is_winner := TRUE;
        ELSE
            -- 5% - –∫—Ä—É–ø–Ω—ã–µ –ø—Ä–∏–∑—ã ($8.00 - $10.00)
            prize_type := 'large';
            prize_amount := 8.0 + (RANDOM() * 2.0); -- $8.00-$10.00
            is_winner := TRUE;
        END IF;
        
        -- –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ —Ü–µ–Ω—Ç–æ–≤
        prize_amount := ROUND(prize_amount, 2);
    ELSE
        -- –ë–∏–ª–µ—Ç –Ω–µ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç
        prize_type := 'none';
        prize_amount := 0;
        is_winner := FALSE;
    END IF;
    
    RETURN NEXT;
END;
$$ LANGUAGE plpgsql;

-- 4. –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ instant tickets –¥–ª—è –∑–∞—è–≤–∫–∏
CREATE OR REPLACE FUNCTION generate_instant_tickets_for_application(app_id UUID)
RETURNS INTEGER AS $$
DECLARE
    app_record RECORD;
    ticket_count INTEGER;
    i INTEGER;
    ticket_prize RECORD;
    generated_count INTEGER := 0;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—è–≤–∫–µ
    SELECT * INTO app_record 
    FROM applications 
    WHERE id = app_id;
    
    IF NOT FOUND THEN
        RAISE EXCEPTION '–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: %', app_id;
    END IF;
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–∏–ª–µ—Ç—ã –µ—â–µ –Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å
    IF app_record.instant_ticket_generated THEN
        RAISE NOTICE '–ë–∏–ª–µ—Ç—ã –¥–ª—è –∑–∞—è–≤–∫–∏ % —É–∂–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã', app_id;
        RETURN 0;
    END IF;
    
    -- –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤ = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–º–µ—Ä–æ–≤
    ticket_count := array_length(app_record.numbers, 1);
    
    IF ticket_count IS NULL OR ticket_count = 0 THEN
        RAISE EXCEPTION '–í –∑–∞—è–≤–∫–µ % –Ω–µ—Ç –Ω–æ–º–µ—Ä–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–∏–ª–µ—Ç–æ–≤', app_id;
    END IF;
    
    -- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–∏–ª–µ—Ç—ã
    FOR i IN 1..ticket_count LOOP
        -- –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∏–∑ –¥–ª—è –±–∏–ª–µ—Ç–∞
        SELECT * INTO ticket_prize FROM calculate_ticket_prize(ticket_count);
        
        -- –°–æ–∑–¥–∞–µ–º –±–∏–ª–µ—Ç
        INSERT INTO instant_tickets (
            application_id,
            ticket_number,
            barcode,
            prize_type,
            prize_amount,
            is_winner,
            is_scratched,
            is_claimed
        ) VALUES (
            app_id,
            generate_ticket_number(),
            generate_barcode(),
            ticket_prize.prize_type,
            ticket_prize.prize_amount,
            ticket_prize.is_winner,
            FALSE,
            FALSE
        );
        
        generated_count := generated_count + 1;
    END LOOP;
    
    -- –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –±–∏–ª–µ—Ç—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã
    UPDATE applications 
    SET instant_ticket_generated = TRUE 
    WHERE id = app_id;
    
    RAISE NOTICE '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ % –±–∏–ª–µ—Ç–æ–≤ –¥–ª—è –∑–∞—è–≤–∫–∏ %', generated_count, app_id;
    RETURN generated_count;
END;
$$ LANGUAGE plpgsql;

-- 5. –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±–∏–ª–µ—Ç–æ–≤ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏
CREATE OR REPLACE FUNCTION trigger_generate_instant_tickets()
RETURNS TRIGGER AS $$
BEGIN
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ 'approved'
    IF OLD.status != 'approved' AND NEW.status = 'approved' THEN
        -- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–∏–ª–µ—Ç—ã –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ (–Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é)
        PERFORM generate_instant_tickets_for_application(NEW.id);
        
        RAISE NOTICE '–¢—Ä–∏–≥–≥–µ—Ä: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è instant tickets –¥–ª—è –∑–∞—è–≤–∫–∏ %', NEW.id;
    END IF;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ç—Ä–∏–≥–≥–µ—Ä –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DROP TRIGGER IF EXISTS auto_generate_instant_tickets ON applications;

-- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä
CREATE TRIGGER auto_generate_instant_tickets
    AFTER UPDATE ON applications
    FOR EACH ROW
    EXECUTE FUNCTION trigger_generate_instant_tickets();

-- 6. –í–∫–ª—é—á–∞–µ–º RLS –¥–ª—è instant_tickets –µ—Å–ª–∏ –µ—â–µ –Ω–µ –≤–∫–ª—é—á–µ–Ω
ALTER TABLE instant_tickets ENABLE ROW LEVEL SECURITY;

-- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏
DROP POLICY IF EXISTS "anon_read_instant_tickets" ON instant_tickets;
DROP POLICY IF EXISTS "service_role_all_instant_tickets" ON instant_tickets;

-- –°–æ–∑–¥–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–∞
CREATE POLICY "anon_read_instant_tickets" ON instant_tickets
    FOR SELECT TO anon, authenticated USING (true);

CREATE POLICY "service_role_all_instant_tickets" ON instant_tickets
    FOR ALL TO service_role USING (true) WITH CHECK (true);

-- 7. –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
DO $$
BEGIN
    RAISE NOTICE '‚úÖ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ instant tickets –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞';
    RAISE NOTICE 'üìã –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ applications.status –Ω–∞ "approved" –±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã –±–∏–ª–µ—Ç—ã';
    RAISE NOTICE 'üé´ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤ = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–º–µ—Ä–æ–≤ –≤ –∑–∞—è–≤–∫–µ';
    RAISE NOTICE 'üé∞ –ê–ª–≥–æ—Ä–∏—Ç–º –ø—Ä–∏–∑–æ–≤: 20%% –≤—ã–∏–≥—Ä—ã–≤–∞—é—Ç, –±—é–¥–∂–µ—Ç $15 –Ω–∞ 100 –±–∏–ª–µ—Ç–æ–≤';
END $$;